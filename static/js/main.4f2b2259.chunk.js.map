{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/HumanLink/HumanLink.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","HumanLink","human","to","slug","classNames","sex","name","PeoplePage","useState","people","setPeople","error","setError","isLoading","setIsLoading","useParams","useEffect","humans","catch","finally","isSelected","person","length","find","style","fontSize","marginBottom","fontWeight","color","map","father","fatherName","mother","motherName","findMother","born","died","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4f2b2259.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  human: Person\n};\n\nexport const HumanLink: FC<Props> = ({ human }) => {\n  return (\n    <Link\n      to={`/people/${human.slug}`}\n      className={\n        classNames({ 'has-text-danger': human?.sex === 'f' })\n      }\n    >\n      {human.name}\n    </Link>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { getPeople } from '../../api';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { HumanLink } from '../HumanLink/HumanLink';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n    getPeople()\n      .then(humans => setPeople(humans))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const findFather = (person: Person) => {\n    return people.find(father => father.name === person.fatherName);\n  };\n\n  const findMother = (person: Person) => {\n    return people.find(mother => mother.name === person.motherName);\n  };\n\n  const isSelected = (person: Person) => person.slug === slug;\n  const absentSlug = () => people.find(person => person.slug === slug);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {slug.length > 0 && !absentSlug() && (\n        <p style={\n          {\n            fontSize: '25px',\n            marginBottom: '20px',\n            fontWeight: 'bold',\n            color: 'red',\n          }\n        }\n        >\n          There are no people on the server according to your request\n        </p>\n      )}\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error\n          && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isLoading\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(human => {\n                const father = findFather(human);\n                const mother = findMother(human);\n\n                return (\n                  <tr\n                    data-cy=\"person\"\n                    key={human.slug}\n                    className={\n                      classNames(\n                        { 'has-background-warning': isSelected(human) },\n                      )\n                    }\n                  >\n                    <td>\n                      <HumanLink human={human} />\n                    </td>\n\n                    <td>{human.sex}</td>\n                    <td>{human.born}</td>\n                    <td>{human.died}</td>\n                    <td>\n                      {mother\n                        ? <HumanLink human={mother} />\n                        : `${human.motherName || '-'}`}\n\n                    </td>\n                    <td>\n                      {father\n                        ? <HumanLink human={father} />\n                        : `${human.fatherName || '-'}`}\n\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  Routes, Route, NavLink, Navigate,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => (\n                classNames('navbar-item',\n                  { 'has-background-grey-lighter': isActive }))}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => (\n                classNames('navbar-item',\n                  { 'has-background-grey-lighter': isActive }))}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}